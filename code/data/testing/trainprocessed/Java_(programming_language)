<START> <START> Java is a functional computer programming language that is UNKNOWNWORD UNKNOWNWORD object-oriented, and specifically designed to have as few implementation UNKNOWNWORD as UNKNOWNWORD It is intended to UNKNOWNWORD application developers UNKNOWNWORD once, run UNKNOWNWORD UNKNOWNWORD meaning that code that runs on one platform does not need to be UNKNOWNWORD to run on UNKNOWNWORD Java applications are typically compiled to bytecode that can run on any Java virtual machine UNKNOWNWORD regardless of computer architecture. Java is, as of 2015, one of the most popular programming languages in use, particularly for UNKNOWNWORD web applications, with a reported 9 million UNKNOWNWORD Java was originally developed by James Gosling at Sun Microsystems (which has since merged into Oracle UNKNOWNWORD and released in UNKNOWNWORD as a core component of Sun UNKNOWNWORD Java UNKNOWNWORD The language derives much of its syntax from C and C++, but it has fewer UNKNOWNWORD facilities than either of them. <END>
<START> <START> The original and reference implementation Java UNKNOWNWORD virtual UNKNOWNWORD and class libraries were originally released by Sun under UNKNOWNWORD UNKNOWNWORD As of May 2007, in UNKNOWNWORD with the UNKNOWNWORD of the Java Community UNKNOWNWORD Sun UNKNOWNWORD most of its Java technologies under the GNU General Public UNKNOWNWORD UNKNOWNWORD have also developed alternative implementations of these Sun UNKNOWNWORD such as the GNU UNKNOWNWORD for Java UNKNOWNWORD UNKNOWNWORD GNU UNKNOWNWORD (standard UNKNOWNWORD and UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD for UNKNOWNWORD <END>
<START> <START> James UNKNOWNWORD Mike UNKNOWNWORD and UNKNOWNWORD UNKNOWNWORD initiated the Java language project in June UNKNOWNWORD Java was originally designed for UNKNOWNWORD UNKNOWNWORD but it was too advanced for the digital cable television industry at the time. The language was initially called UNKNOWNWORD after an UNKNOWNWORD tree that UNKNOWNWORD outside UNKNOWNWORD UNKNOWNWORD Later the project went by the name Green and was finally renamed Java, from Java UNKNOWNWORD said to be UNKNOWNWORD in large UNKNOWNWORD by the language's UNKNOWNWORD Gosling designed Java with a UNKNOWNWORD syntax that system and application programmers would find UNKNOWNWORD <END>
<START> <START> Sun Microsystems released the first public implementation as Java 1.0 in 1995. It UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD providing UNKNOWNWORD UNKNOWNWORD on popular platforms. UNKNOWNWORD secure and featuring UNKNOWNWORD UNKNOWNWORD it allowed UNKNOWNWORD and UNKNOWNWORD UNKNOWNWORD Major web UNKNOWNWORD soon incorporated the ability to run Java applets within web UNKNOWNWORD and Java quickly became UNKNOWNWORD The Java 1.0 compiler was UNKNOWNWORD in Java by UNKNOWNWORD van UNKNOWNWORD to UNKNOWNWORD UNKNOWNWORD with the Java 1.0 language UNKNOWNWORD With the advent of Java 2 (released initially as UNKNOWNWORD UNKNOWNWORD in December 1998 â€“ UNKNOWNWORD new versions had multiple UNKNOWNWORD built for different types of platforms. UNKNOWNWORD included technologies and APIs for UNKNOWNWORD applications typically run in server UNKNOWNWORD while UNKNOWNWORD featured APIs UNKNOWNWORD for mobile applications. The UNKNOWNWORD version was renamed UNKNOWNWORD In 2006, for UNKNOWNWORD purposes, Sun renamed new UNKNOWNWORD versions as Java UNKNOWNWORD Java UNKNOWNWORD and Java UNKNOWNWORD respectively. <END>
<START> <START> In 1997, Sun Microsystems UNKNOWNWORD the UNKNOWNWORD UNKNOWNWORD 1 standards body and later the UNKNOWNWORD International to UNKNOWNWORD Java, but it soon UNKNOWNWORD from the process. Java remains a de facto standard, controlled through the Java Community UNKNOWNWORD At one time, Sun made most of its Java implementations available without UNKNOWNWORD despite their UNKNOWNWORD software UNKNOWNWORD Sun generated revenue from Java through the selling of licenses for specialized products such as the Java UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> On November UNKNOWNWORD 2006, Sun released much of Java as free and open-source UNKNOWNWORD UNKNOWNWORD under the terms of the GNU General Public UNKNOWNWORD UNKNOWNWORD On May UNKNOWNWORD 2007, Sun finished the UNKNOWNWORD making all of Java's core code available under free UNKNOWNWORD distribution terms, aside from a small portion of code to which Sun did not hold the UNKNOWNWORD <END>
<START> <START> Sun's UNKNOWNWORD UNKNOWNWORD Green said that Sun's ideal role with UNKNOWNWORD to Java was as an UNKNOWNWORD Following Oracle UNKNOWNWORD acquisition of Sun Microsystems in UNKNOWNWORD Oracle has described itself as the UNKNOWNWORD of Java technology with a UNKNOWNWORD UNKNOWNWORD to UNKNOWNWORD a community of UNKNOWNWORD and UNKNOWNWORD This did not prevent Oracle from UNKNOWNWORD a UNKNOWNWORD against Google shortly after that for using Java inside the Android UNKNOWNWORD (see Google section below). Java software runs on everything from UNKNOWNWORD to data UNKNOWNWORD game UNKNOWNWORD to scientific UNKNOWNWORD There are UNKNOWNWORD million Java Runtime Environment UNKNOWNWORD each year and over 3 billion mobile UNKNOWNWORD run Java. On April 2, 2010, James Gosling UNKNOWNWORD from UNKNOWNWORD <END>
<START> <START> There were five primary UNKNOWNWORD in the creation of the Java UNKNOWNWORD <END>
<START> <START> Major release versions of Java, along with their release UNKNOWNWORD <END>
<START> <START> One design goal of Java is UNKNOWNWORD which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate runtime UNKNOWNWORD This is achieved by compiling the Java language code to an intermediate representation called Java bytecode, instead of directly to UNKNOWNWORD machine code. Java bytecode instructions are analogous to machine code, but they are intended to be executed by a virtual machine UNKNOWNWORD written specifically for the host UNKNOWNWORD UNKNOWNWORD users commonly use a Java Runtime Environment UNKNOWNWORD installed on their own machine for UNKNOWNWORD Java applications, or in a web UNKNOWNWORD for Java UNKNOWNWORD <END>
<START> <START> UNKNOWNWORD libraries provide a generic way to access UNKNOWNWORD features such as UNKNOWNWORD UNKNOWNWORD and UNKNOWNWORD <END>
<START> <START> A major benefit of using bytecode is UNKNOWNWORD However, the overhead of interpretation means that interpreted programs almost always run more slowly than programs compiled to native UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD compilers were introduced from an early stage that compile UNKNOWNWORD to machine code during UNKNOWNWORD Java is platform UNKNOWNWORD But as Java virtual machine must convert Java bytecode into machine language which depends on the operating system being used, it is platform UNKNOWNWORD <END>
<START> <START> Oracle Corporation is the current owner of the official implementation of the Java SE platform, following their acquisition of Sun Microsystems on January 27, 2010. This implementation is based on the original implementation of Java by Sun. The Oracle implementation is available for Microsoft Windows, Mac OS X, Linux and UNKNOWNWORD Because Java lacks any formal UNKNOWNWORD recognized by UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD or other third-party standards UNKNOWNWORD the Oracle implementation is the de facto standard. <END>
<START> <START> The Oracle implementation is packaged into two different UNKNOWNWORD The Java Runtime Environment UNKNOWNWORD which contains the parts of the Java SE platform required to run Java programs and is intended for end UNKNOWNWORD and the Java Development UNKNOWNWORD UNKNOWNWORD which is intended for software developers and includes development tools such as the Java compiler, UNKNOWNWORD UNKNOWNWORD and a UNKNOWNWORD <END>
<START> <START> UNKNOWNWORD is another notable Java SE implementation that is licensed under the GNU UNKNOWNWORD The implementation started when Sun began UNKNOWNWORD the Java source code under the UNKNOWNWORD As of Java SE UNKNOWNWORD UNKNOWNWORD is the official Java reference UNKNOWNWORD <END>
<START> <START> The goal of Java is to make all implementations of Java UNKNOWNWORD Historically, Sun's UNKNOWNWORD UNKNOWNWORD for usage of the Java brand UNKNOWNWORD that all implementations be UNKNOWNWORD This resulted in a legal dispute with Microsoft after Sun claimed that the Microsoft implementation did not support UNKNOWNWORD or UNKNOWNWORD and had added UNKNOWNWORD features of their UNKNOWNWORD Sun UNKNOWNWORD in 1997, and in 2001 won a settlement of UNKNOWNWORD million, as well as a court order UNKNOWNWORD the terms of the UNKNOWNWORD from Sun. As a result, Microsoft no longer ships Windows with UNKNOWNWORD <END>
<START> <START> UNKNOWNWORD Java is essential to Java UNKNOWNWORD and an even more UNKNOWNWORD UNKNOWNWORD is required to UNKNOWNWORD an UNKNOWNWORD This environment UNKNOWNWORD UNKNOWNWORD server-side UNKNOWNWORD <END>
<START> <START> UNKNOWNWORD written in Java have a reputation for being UNKNOWNWORD and requiring more memory than those written in C++. However, Java UNKNOWNWORD execution speed improved significantly with the introduction of UNKNOWNWORD UNKNOWNWORD in UNKNOWNWORD for Java UNKNOWNWORD the addition of language features UNKNOWNWORD better code analysis (such as inner classes, the UNKNOWNWORD class, optional UNKNOWNWORD etc.), and UNKNOWNWORD in the Java virtual machine, such as HotSpot becoming the default for Sun's JVM in UNKNOWNWORD <END>
<START> <START> Some platforms offer direct hardware support for UNKNOWNWORD there are UNKNOWNWORD that can run Java in hardware instead of a software Java virtual machine, and UNKNOWNWORD based UNKNOWNWORD can have hardware support for UNKNOWNWORD Java bytecode through their UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> Java uses an automatic garbage collector to manage memory in the object UNKNOWNWORD The programmer determines when objects are UNKNOWNWORD and the Java runtime is responsible for UNKNOWNWORD the memory once objects are no longer in use. Once no references to an object UNKNOWNWORD the UNKNOWNWORD memory becomes UNKNOWNWORD to be UNKNOWNWORD automatically by the garbage UNKNOWNWORD UNKNOWNWORD similar to a memory UNKNOWNWORD may still occur if a UNKNOWNWORD code holds a reference to an object that is no longer UNKNOWNWORD typically when objects that are no longer needed are stored in UNKNOWNWORD that are still in use. If methods for a UNKNOWNWORD object are UNKNOWNWORD a UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD is UNKNOWNWORD <END>
<START> <START> One of the ideas behind Java's automatic memory management model is that programmers can be UNKNOWNWORD the UNKNOWNWORD of having to perform manual memory management. In some languages, memory for the creation of objects is UNKNOWNWORD UNKNOWNWORD on the UNKNOWNWORD or UNKNOWNWORD UNKNOWNWORD and UNKNOWNWORD from the UNKNOWNWORD In the latter case the UNKNOWNWORD of managing memory resides with the UNKNOWNWORD If the program does not deallocate an object, a memory UNKNOWNWORD UNKNOWNWORD If the program attempts to access or deallocate memory that has already been UNKNOWNWORD the result is UNKNOWNWORD and difficult to UNKNOWNWORD and the program is likely to become UNKNOWNWORD and/or UNKNOWNWORD This can be partially UNKNOWNWORD by the use of smart UNKNOWNWORD but these add overhead and UNKNOWNWORD UNKNOWNWORD that garbage collection does not prevent UNKNOWNWORD memory UNKNOWNWORD i.e., those where the memory is still referenced but never used. <END>
<START> <START> UNKNOWNWORD collection may happen at any time. UNKNOWNWORD it will occur when a program is UNKNOWNWORD It is UNKNOWNWORD to be UNKNOWNWORD if there is UNKNOWNWORD free memory on the UNKNOWNWORD to UNKNOWNWORD a new UNKNOWNWORD this can cause a program to UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD memory management is not possible in UNKNOWNWORD <END>
<START> <START> Java does not support UNKNOWNWORD style UNKNOWNWORD UNKNOWNWORD where object UNKNOWNWORD and UNKNOWNWORD UNKNOWNWORD (usually long UNKNOWNWORD can be used UNKNOWNWORD This allows the garbage collector to UNKNOWNWORD referenced objects and UNKNOWNWORD type UNKNOWNWORD and UNKNOWNWORD <END>
<START> <START> As in C++ and some other object-oriented languages, variables of Java's primitive data types are not objects. UNKNOWNWORD of primitive types are either stored directly in fields (for UNKNOWNWORD or on the UNKNOWNWORD (for UNKNOWNWORD rather than on the UNKNOWNWORD as is commonly true for objects (but see UNKNOWNWORD UNKNOWNWORD This was a UNKNOWNWORD decision by Java's designers for performance reasons. Because of this, Java was not considered to be a UNKNOWNWORD object-oriented programming language. However, as of Java UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD programmers to UNKNOWNWORD as if primitive types were instances of their UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> Java contains multiple types of garbage UNKNOWNWORD By UNKNOWNWORD HotSpot uses the parallel UNKNOWNWORD garbage UNKNOWNWORD However, there are also several other garbage UNKNOWNWORD that can be used to manage the UNKNOWNWORD For 90% of applications in Java, the UNKNOWNWORD UNKNOWNWORD garbage collector is UNKNOWNWORD Oracle aims to replace UNKNOWNWORD with the UNKNOWNWORD collector UNKNOWNWORD <END>
<START> <START> The syntax of Java is largely derived from C++. Unlike C++, which UNKNOWNWORD the syntax for UNKNOWNWORD UNKNOWNWORD and object-oriented programming, Java was built almost exclusively as an object-oriented language. All code is written inside classes, and every data UNKNOWNWORD is an object, with the exception of the primitive data types, i.e. UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD boolean UNKNOWNWORD and characters, which are not objects for performance UNKNOWNWORD <END>
<START> <START> Unlike C++, Java does not support operator UNKNOWNWORD or multiple UNKNOWNWORD for classes, though multiple UNKNOWNWORD is supported for UNKNOWNWORD This UNKNOWNWORD the language and UNKNOWNWORD in UNKNOWNWORD potential UNKNOWNWORD and UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> Java uses comments similar to those of C++. There are three different styles of UNKNOWNWORD a single line style marked with two UNKNOWNWORD UNKNOWNWORD a multiple line style opened with UNKNOWNWORD and closed with UNKNOWNWORD and the Javadoc commenting style opened with UNKNOWNWORD and closed with UNKNOWNWORD The Javadoc style of commenting allows the user to run the Javadoc executable to create documentation for the UNKNOWNWORD <END>
<START> <START> UNKNOWNWORD <END>
<START> <START> The traditional "Hello, world!" program can be written in Java as: <END>
<START> <START> To compare this to other programming languages see the list of UNKNOWNWORD UNKNOWNWORD program UNKNOWNWORD <END>
<START> <START> UNKNOWNWORD files must be named after the public class they UNKNOWNWORD UNKNOWNWORD the suffix UNKNOWNWORD for example, UNKNOWNWORD It must first be compiled into bytecode, using a Java compiler, producing a file named UNKNOWNWORD Only then can it be UNKNOWNWORD or UNKNOWNWORD The Java source file may only contain one public class, but it can contain multiple classes with other than public access and any number of public inner UNKNOWNWORD When the source file contains multiple classes, make one class UNKNOWNWORD and name the source file with that public class name. <END>
<START> <START> A class that is not declared public may be stored in any UNKNOWNWORD UNKNOWNWORD The compiler will generate a class file for each class defined in the source UNKNOWNWORD The name of the class file is the name of the class, with UNKNOWNWORD UNKNOWNWORD For class file UNKNOWNWORD UNKNOWNWORD classes are UNKNOWNWORD as if their name were the UNKNOWNWORD of the name of their enclosing class, a UNKNOWNWORD and an UNKNOWNWORD <END>
<START> <START> The keyword public UNKNOWNWORD that a method can be called from code in other classes, or that a class may be used by classes outside the class UNKNOWNWORD The class UNKNOWNWORD is related to the name of the directory in which the UNKNOWNWORD file is UNKNOWNWORD <END>
<START> <START> The keyword static in front of a method indicates a static UNKNOWNWORD which is associated only with the class and not with any specific instance of that class. Only static methods can be invoked without a reference to an UNKNOWNWORD UNKNOWNWORD methods cannot access any class members that are not also UNKNOWNWORD <END>
<START> <START> The keyword void indicates that the main method does not return any value to the UNKNOWNWORD If a Java program is to exit with an UNKNOWNWORD code, it must call UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> The method name UNKNOWNWORD is not a keyword in the Java language. It is simply the name of the method the Java UNKNOWNWORD calls to pass control to the program. Java classes that run in managed environments such as applets and UNKNOWNWORD UNKNOWNWORD do not use or need a UNKNOWNWORD UNKNOWNWORD A Java program may contain multiple classes that have main UNKNOWNWORD which means that the UNKNOWNWORD needs to be UNKNOWNWORD UNKNOWNWORD which class to launch UNKNOWNWORD <END>
<START> <START> The main method must accept an array of String objects. By UNKNOWNWORD it is referenced as args although any other legal UNKNOWNWORD name can be used. Since Java 5, the main method can also use variable UNKNOWNWORD in the form of public static void UNKNOWNWORD UNKNOWNWORD allowing the main method to be invoked with an arbitrary number of String UNKNOWNWORD The effect of this alternate declaration is UNKNOWNWORD identical (the args parameter is still an array of String UNKNOWNWORD but it allows an alternative syntax for creating and passing the UNKNOWNWORD <END>
<START> <START> The Java UNKNOWNWORD UNKNOWNWORD Java by UNKNOWNWORD a given class UNKNOWNWORD on the command line or as an UNKNOWNWORD in a UNKNOWNWORD and starting its public static void UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD programs must declare this method UNKNOWNWORD The UNKNOWNWORD args parameter is an array of String objects containing any UNKNOWNWORD passed to the class. The UNKNOWNWORD to main are often passed by means of a command line. <END>
<START> <START> UNKNOWNWORD is part of a Java standard UNKNOWNWORD The System class defines a public static field called out. The out object is an instance of the UNKNOWNWORD class and provides many methods for printing data to standard out, including UNKNOWNWORD which also UNKNOWNWORD a new line to the passed string. <END>
<START> <START> The string UNKNOWNWORD UNKNOWNWORD is automatically converted to a String object by the UNKNOWNWORD <END>
<START> <START> Java applets are programs that are embedded in other applications, typically in a Web page displayed in a web UNKNOWNWORD <END>
<START> <START> The import statements direct the Java compiler to include the UNKNOWNWORD and UNKNOWNWORD classes in the UNKNOWNWORD The import statement allows these classes to be referenced in the source code using the simple class name (i.e. UNKNOWNWORD instead of the fully UNKNOWNWORD class name UNKNOWNWORD i.e. UNKNOWNWORD <END>
<START> <START> The Hello class extends UNKNOWNWORD the JApplet UNKNOWNWORD UNKNOWNWORD class; the JApplet class provides the framework for the host application to display and control the UNKNOWNWORD of the applet. The JApplet class is a UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD which provides the applet with the UNKNOWNWORD to display a graphical user interface UNKNOWNWORD and UNKNOWNWORD to user UNKNOWNWORD <END>
<START> <START> The Hello class UNKNOWNWORD the UNKNOWNWORD method UNKNOWNWORD indicated with the UNKNOWNWORD supported as of UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD inherited from the UNKNOWNWORD superclass to provide the code to display the applet. The paintComponent() method is passed a UNKNOWNWORD object that contains the graphic context used to display the applet. The paintComponent() method calls the graphic context UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD method to display the "Hello, world!" string at a UNKNOWNWORD UNKNOWNWORD of UNKNOWNWORD UNKNOWNWORD from the UNKNOWNWORD corner in the UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> An applet is placed in an HTML document using the UNKNOWNWORD HTML UNKNOWNWORD The applet tag has three UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD the name of the JApplet class and UNKNOWNWORD UNKNOWNWORD sets the UNKNOWNWORD width and height of the applet. UNKNOWNWORD may also be embedded in HTML using either the object or embed element, although support for these elements by web UNKNOWNWORD is UNKNOWNWORD However, the applet tag is UNKNOWNWORD so the object tag is preferred where UNKNOWNWORD <END>
<START> <START> The host UNKNOWNWORD typically a Web UNKNOWNWORD UNKNOWNWORD the Hello applet and creates an UNKNOWNWORD for the applet. Once the applet has UNKNOWNWORD itself, it is added to the AWT display UNKNOWNWORD The paintComponent() method is called by the AWT event UNKNOWNWORD thread UNKNOWNWORD the display needs the applet to draw UNKNOWNWORD <END>
<START> <START> Java UNKNOWNWORD technology provides Web developers with a UNKNOWNWORD consistent mechanism for extending the UNKNOWNWORD of a Web server and for UNKNOWNWORD existing business systems. UNKNOWNWORD are server-side Java UNKNOWNWORD components that generate UNKNOWNWORD (typically HTML UNKNOWNWORD to requests (typically UNKNOWNWORD UNKNOWNWORD from UNKNOWNWORD A servlet can almost be thought of as an applet that runs on the server UNKNOWNWORD a UNKNOWNWORD <END>
<START> <START> The import statements direct the Java compiler to include all the public classes and interfaces from the UNKNOWNWORD and UNKNOWNWORD packages in the UNKNOWNWORD UNKNOWNWORD make Java well suited for large scale UNKNOWNWORD <END>
<START> <START> The Hello class extends the UNKNOWNWORD class; the UNKNOWNWORD class provides the interface for the server to forward requests to the servlet and control the UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> The Hello class UNKNOWNWORD the UNKNOWNWORD UNKNOWNWORD method defined by the UNKNOWNWORD interface to provide the code for the service request UNKNOWNWORD The UNKNOWNWORD method is UNKNOWNWORD a UNKNOWNWORD object that contains the request from the UNKNOWNWORD and a UNKNOWNWORD object used to create the response returned to the UNKNOWNWORD The UNKNOWNWORD method declares that it UNKNOWNWORD the exceptions UNKNOWNWORD and UNKNOWNWORD if a problem UNKNOWNWORD it from UNKNOWNWORD to the UNKNOWNWORD <END>
<START> <START> The UNKNOWNWORD method in the response object is called to set the UNKNOWNWORD content type of the returned data to UNKNOWNWORD The UNKNOWNWORD method in the response UNKNOWNWORD a UNKNOWNWORD object that is used to write the data that is sent to the UNKNOWNWORD The UNKNOWNWORD method is called to write the "Hello, world!" string to the response and then the UNKNOWNWORD method is called to close the UNKNOWNWORD UNKNOWNWORD which causes the data that has been written to the stream to be returned to the UNKNOWNWORD <END>
<START> <START> UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD are server-side Java UNKNOWNWORD components that generate UNKNOWNWORD typically HTML UNKNOWNWORD to UNKNOWNWORD requests from UNKNOWNWORD UNKNOWNWORD embed Java code in an HTML page by using the special UNKNOWNWORD UNKNOWNWORD and UNKNOWNWORD A UNKNOWNWORD is compiled to a Java UNKNOWNWORD a Java application in its own UNKNOWNWORD the first time it is UNKNOWNWORD After that, the generated servlet creates the UNKNOWNWORD <END>
<START> <START> Swing is a graphical user interface library for the Java SE UNKNOWNWORD It is possible to UNKNOWNWORD a different look and feel through the UNKNOWNWORD look and feel system of UNKNOWNWORD UNKNOWNWORD of Windows, UNKNOWNWORD and UNKNOWNWORD are supplied by Sun. UNKNOWNWORD also provides an UNKNOWNWORD look and feel for Mac OS UNKNOWNWORD Where prior implementations of these looks and feels may have been considered UNKNOWNWORD Swing in Java SE 6 UNKNOWNWORD this problem by using more native UNKNOWNWORD UNKNOWNWORD drawing UNKNOWNWORD of the UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> This example Swing application creates a single window with "Hello, world!" UNKNOWNWORD <END>
<START> <START> The first import includes all the public classes and interfaces from the UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> The Hello class extends the JFrame class; the JFrame class implements a window with a title bar and a close UNKNOWNWORD <END>
<START> <START> The UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD the frame by first calling the superclass UNKNOWNWORD passing the parameter UNKNOWNWORD which is used as the UNKNOWNWORD UNKNOWNWORD It then calls the UNKNOWNWORD method inherited from JFrame to set the default operation when the close control on the title bar is selected to UNKNOWNWORD â€” this causes the JFrame to be UNKNOWNWORD of when the frame is closed (as opposed to UNKNOWNWORD UNKNOWNWORD which allows the Java virtual machine to exit and the program to UNKNOWNWORD UNKNOWNWORD a UNKNOWNWORD is created for the string "Hello, world!" and the UNKNOWNWORD method inherited from the UNKNOWNWORD superclass is called to add the UNKNOWNWORD to the UNKNOWNWORD The UNKNOWNWORD method inherited from the UNKNOWNWORD superclass is called to size the window and UNKNOWNWORD out its UNKNOWNWORD <END>
<START> <START> The UNKNOWNWORD method is called by the Java virtual machine when the program UNKNOWNWORD It UNKNOWNWORD a new Hello frame and causes it to be displayed by calling the UNKNOWNWORD method inherited from the UNKNOWNWORD superclass with the boolean parameter UNKNOWNWORD Once the frame is UNKNOWNWORD UNKNOWNWORD the main method does not cause the program to UNKNOWNWORD because the AWT event UNKNOWNWORD thread remains active until all of the Swing UNKNOWNWORD UNKNOWNWORD have been UNKNOWNWORD <END>
<START> <START> In 2004, UNKNOWNWORD were added to the Java language, as part of UNKNOWNWORD UNKNOWNWORD Prior to the introduction of UNKNOWNWORD each variable declaration had to be of a specific type. For container classes, for example, this is a problem because there is no easy way to create a container that accepts only specific types of objects. UNKNOWNWORD the container operates on all UNKNOWNWORD of a class or UNKNOWNWORD usually UNKNOWNWORD or a different container class has to be created for each contained class. UNKNOWNWORD allow UNKNOWNWORD type UNKNOWNWORD without having to create many container classes, each containing almost identical code. In addition to UNKNOWNWORD more efficient code, certain runtime exceptions are converted to UNKNOWNWORD UNKNOWNWORD a characteristic known as type UNKNOWNWORD <END>
<START> <START> UNKNOWNWORD UNKNOWNWORD at Java include the implementation of UNKNOWNWORD UNKNOWNWORD the handling of UNKNOWNWORD UNKNOWNWORD the implementation of UNKNOWNWORD UNKNOWNWORD and a history of security UNKNOWNWORD in the primary Java UNKNOWNWORD implementation UNKNOWNWORD <END>
<START> <START> Java, the programming language, requires the presence of a software platform in order for compiled programs to be UNKNOWNWORD A well-known unofficial UNKNOWNWORD software platform is the Android software platform, which allows the use of Java 6 and some Java 7 features, uses a different standard library UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD different bytecode language and different virtual machine, and is designed for UNKNOWNWORD devices such as smartphones and UNKNOWNWORD UNKNOWNWORD <END>
<START> <START> Google and UNKNOWNWORD UNKNOWNWORD have chosen to use Java as a key UNKNOWNWORD in the creation of the Android operating system, an open source mobile operating system. Although the Android operating system, built on the Linux UNKNOWNWORD was written largely in C, the Android UNKNOWNWORD uses the Java language as the basis for Android applications. However, Android does not use the Java virtual machine, instead using Java bytecode as an intermediate step and ultimately targeting UNKNOWNWORD own UNKNOWNWORD virtual UNKNOWNWORD <END>
<START> <START> Android also does not provide the full Java SE standard library, although the Android class library does include an independent implementation of a large subset of it. This led to a legal dispute between Oracle and UNKNOWNWORD On May UNKNOWNWORD 2012, a San Francisco UNKNOWNWORD found that if APIs could be UNKNOWNWORD then Google had UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD by the use of Java in Android UNKNOWNWORD District UNKNOWNWORD William UNKNOWNWORD UNKNOWNWORD ruled on May UNKNOWNWORD 2012, that APIs cannot be UNKNOWNWORD but this was UNKNOWNWORD by the UNKNOWNWORD UNKNOWNWORD Court of UNKNOWNWORD in May UNKNOWNWORD <END>
<START> <START> The Java UNKNOWNWORD Library is the standard library, developed to support application development in Java. It is controlled by Sun Microsystems in UNKNOWNWORD with others through the Java Community UNKNOWNWORD program. UNKNOWNWORD or UNKNOWNWORD UNKNOWNWORD in this process can influence the design and development of the UNKNOWNWORD This process has been a subject of UNKNOWNWORD The class library contains features such as: <END>
<START> <START> Javadoc is a comprehensive documentation system, created by Sun UNKNOWNWORD used by many Java UNKNOWNWORD It provides developers with an organized system for UNKNOWNWORD their code. Javadoc comments have an extra UNKNOWNWORD at the UNKNOWNWORD i.e. the UNKNOWNWORD are UNKNOWNWORD and UNKNOWNWORD whereas the normal UNKNOWNWORD comments in Java are set off with the UNKNOWNWORD UNKNOWNWORD and UNKNOWNWORD <END>
<START> <START> Sun has defined and supports four editions of Java targeting different application environments and UNKNOWNWORD many of its APIs so that they belong to one of the platforms. The platforms are: <END>
<START> <START> Sun also provided an edition called UNKNOWNWORD that has been superseded by later, UNKNOWNWORD Java UNKNOWNWORD UNKNOWNWORD UNKNOWNWORD <END>
